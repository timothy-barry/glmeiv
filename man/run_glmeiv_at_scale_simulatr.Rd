% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/at_scale_em_algo_functs.R
\name{run_glmeiv_at_scale_simulatr}
\alias{run_glmeiv_at_scale_simulatr}
\title{Run GLM-EIV at scale simulatr}
\usage{
run_glmeiv_at_scale_simulatr(
  dat,
  m_fam,
  g_fam,
  covariate_matrix,
  m_offset,
  g_offset,
  alpha = 0.95,
  n_em_rep = 15,
  save_membership_probs_mult = 250,
  pi_guess_range = c(1e-05, 0.03),
  m_perturbation_guess_range = log(c(0.1, 1.5)),
  g_perturbation_guess_range = log(c(0.5, 10))
)
}
\arguments{
\item{dat}{data frame containing columns "m" and "g" for mRNA counts and gRNA counts}

\item{m_fam}{family describing m}

\item{g_fam}{family describing g}

\item{covariate_matrix}{the matrix of covariates; NULL if there are no covariates.}

\item{m_offset}{offsets for m}

\item{g_offset}{offsets for g}

\item{alpha}{confidence level}

\item{n_em_rep}{number of times to repeat EM algorithm in reduced model}

\item{save_membership_probs_mult}{save posterior membership probabilities at this multiple}

\item{pi_guess_range}{range of values over which to sample pi}

\item{m_perturbation_guess_range}{range of values over which to sample m_perturbation}

\item{g_perturbation_guess_range}{range of values over which to sample g_perturbation}

\item{fam_str}{string (currently either "poisson" or "Negative Binomial") giving family object}
}
\value{
fitted GLM-EIV model
}
\description{
Run GLM-EIV at scale simulatr
}
\examples{
m_fam <- g_fam <- augment_family_object(poisson())
n <- 200000
lib_size <- rpois(n = n, lambda = 5000)
m_offset <- g_offset <- log(lib_size)
pi <- 0.005
m_intercept <- log(0.01)
m_perturbation <- log(0.5)
g_intercept <- log(0.005)
g_perturbation <- log(2.5)
covariate_matrix <- data.frame(batch = rbinom(n = n, size = 1, prob = 0.5))
m_covariate_coefs <- log(0.9)
g_covariate_coefs <- log(1.1)
dat <- generate_full_data(m_fam = m_fam, m_intercept = m_intercept,
m_perturbation = m_perturbation, g_fam = g_fam, g_intercept = g_intercept,
g_perturbation = g_perturbation, pi = pi, n = n, B = 2,
covariate_matrix = covariate_matrix, m_covariate_coefs = m_covariate_coefs,
g_covariate_coefs = g_covariate_coefs, m_offset = m_offset, g_offset = g_offset)[[1]]
m <- dat$m; g <- dat$g; p <- dat$p
# ability to recover ground truth given p
fit <- run_glmeiv_at_scale_simulatr(dat, m_fam, g_fam, covariate_matrix, m_offset, g_offset)
}
