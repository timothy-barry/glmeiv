% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_em_algo_functs.R
\name{run_em_algo_given_init}
\alias{run_em_algo_given_init}
\alias{run_em_algo_given_weights}
\title{Run EM algo given initialization weights}
\usage{
run_em_algo_given_weights(
  m,
  g,
  m_fam,
  g_fam,
  covariate_matrix,
  initial_Ti1s,
  m_offset,
  g_offset,
  ep_tol = 0.5 * 1e-04,
  max_it = 75
)
}
\arguments{
\item{m}{observed vector m}

\item{g}{observed vector g}

\item{m_fam}{augmented family of m}

\item{g_fam}{augmented family of g}

\item{covariate_matrix}{the matrix of covariates; set to NULL if there are no covariates.}

\item{initial_Ti1s}{the initial vector of membership probabilities}

\item{m_offset}{offsets for GLM for M}

\item{g_offset}{offsets for GLM for G}

\item{ep_tol}{(optional) EM convergence threshold}

\item{max_it}{(optional) maximum number of EM iterations}
}
\value{
a list containing the following: fit object of M GLM, fit object of G GLM,
fit for pi, number of iterations,full log-likelihood of final model
}
\description{
Runs GLM-EIV algo with M-step first. Use \code{run_em_algo_given_pilot} to GLM-EIV algo with E-step first.
}
\examples{
m_fam <- g_fam <- augment_family_object(poisson())
n <- 5000
lib_size <- rpois(n = n, lambda = 5000)
m_offset <- g_offset <- log(lib_size)
pi <- 0.1
m_intercept <- log(0.05)
m_perturbation <- log(0.8)
g_intercept <- log(0.025)
g_perturbation <- log(1.2)
covariate_matrix <- data.frame(batch = rbinom(n = n, size = 1, prob = 0.5))
m_covariate_coefs <- log(0.9)
g_covariate_coefs <- log(1.1)
dat <- generate_full_data(m_fam = m_fam, m_intercept = m_intercept,
m_perturbation = m_perturbation, g_fam = g_fam, g_intercept = g_intercept,
g_perturbation = g_perturbation, pi = pi, n = n, B = 2,
covariate_matrix = covariate_matrix, m_covariate_coefs = m_covariate_coefs,
g_covariate_coefs = g_covariate_coefs, m_offset = m_offset, g_offset = g_offset)[[1]]
pi_guess <- 0.05
m_intercept_guess <- log(0.07)
m_perturbation_guess <- log(0.7)
g_intercept_guess <- log(0.02)
g_perturbation_guess <- log(1.4)
m_covariate_coefs_guess <- log(0.8)
g_covariate_coefs_guess <- log(1.2)
m <- dat$m
g <- dat$g
# obtain initial membership probabilities (i.e., run E step) using pilot estimates
initial_Ti1s <- run_e_step_pilot(m, g, m_fam, g_fam, pi_guess,
m_intercept_guess, m_perturbation_guess, m_covariate_coefs_guess,
g_intercept_guess, g_perturbation_guess, g_covariate_coefs_guess,
covariate_matrix, m_offset, g_offset)
# run em algo
fit <- run_em_algo_given_weights(m, g, m_fam, g_fam, covariate_matrix,
initial_Ti1s, m_offset, g_offset)
}
