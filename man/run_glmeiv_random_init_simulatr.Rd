% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/at_scale_em_algo_functs.R
\name{run_glmeiv_random_init_simulatr}
\alias{run_glmeiv_random_init_simulatr}
\title{Run GLM-EIV (random inititalization)}
\usage{
run_glmeiv_random_init_simulatr(
  dat,
  m_fam,
  g_fam,
  covariate_matrix,
  m_offset,
  g_offset,
  alpha = 0.95,
  n_em_rep = 15,
  save_membership_probs_mult = 250,
  pi_guess_range = c(1e-05, 0.03),
  m_perturbation_guess_range = log(c(0.1, 1.5)),
  g_perturbation_guess_range = log(c(0.5, 10)),
  m_intercept_guess_range = log(c(1e-04, 0.1)),
  g_intercept_guess_range = log(c(1e-04, 0.1)),
  m_covariate_coefs_guess_range = log(c(0.25, 2)),
  g_covariate_coefs_guess_range = log(c(0.25, 2)),
  exponentiate_coefs = FALSE
)
}
\arguments{
\item{dat}{a data frame containing columns m, g}

\item{m_fam}{family describing m}

\item{g_fam}{family describing g}

\item{covariate_matrix}{the matrix of covariates; NULL if there are no covariates.}

\item{m_offset}{offsets for m}

\item{g_offset}{offsets for g}

\item{alpha}{CIs returned at level (1-alpha)\%}

\item{n_em_rep}{number of EM replicates}

\item{save_membership_probs_mult}{save membership probabilities at this multiple}

\item{pi_guess_range}{range of values over which to sample pi}

\item{m_perturbation_guess_range}{range of values over which to sample m_perturbation}

\item{g_perturbation_guess_range}{range of values over which to sample g_perturbation}

\item{m_intercept_guess_range}{range over which to sample m_intercept}

\item{g_intercept_guess_range}{range over which to sample g_intercept}

\item{m_covariate_coefs_guess_range}{range over which to sample m_covariate_coefs}

\item{g_covariate_coefs_guess_range}{range over which to sample g_covariate_coefs}

\item{exponentiate_coefs}{(boolean) should the estimated coefficients (and CIs) be exponentiated?}
}
\value{
a fitted GLM-EIV object
}
\description{
Runs GLM-EIV using random initializations for the parameters. Currently, the function assumes that there is (at most) a single covariate term.
}
\examples{
# A simpler Gaussian example
m_fam <- g_fam <- gaussian() \%>\% augment_family_object()
n <- 20000
B <- 2
pi <- 0.05
m_intercept <- 1
m_perturbation <- -2
g_intercept <- -1
g_perturbation <- 2
m_offset <- g_offset <- NULL
covariate_matrix <- data.frame(batch = rbinom(n = n, size = 1, prob = 0.5))
m_covariate_coefs <- g_covariate_coefs <- 0.5
dat <- generate_full_data(m_fam = m_fam, m_intercept = m_intercept,
m_perturbation = m_perturbation, g_fam = g_fam, g_intercept = g_intercept,
g_perturbation = g_perturbation, pi = pi, n = n, B = B,
covariate_matrix = covariate_matrix, m_covariate_coefs = m_covariate_coefs,
g_covariate_coefs = g_covariate_coefs, m_offset = m_offset, g_offset = g_offset)[[1]]
fit <- run_glmeiv_random_init_simulatr(dat = dat, m_fam = m_fam, g_fam = g_fam,
covariate_matrix = NULL, m_offset = NULL, g_offset = NULL)
}
